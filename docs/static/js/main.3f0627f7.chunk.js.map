{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","components/GifExpertApp.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","original","useFetchGifs","loading","state","setstate","useEffect","then","GifGridItem","className","src","alt","GifGrid","el","GifExpertApp","categories","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,kCACE,sBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBAEFJ,EAAWK,OAAOC,OAAS,GACzBR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OAC1CN,EAAc,KAKZ,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBlB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,e,+BCQZG,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,gDACuCC,UACnDH,GAFY,+DAIII,MAAMF,GAJV,cAIRG,EAJQ,gBAKSA,EAAIC,OALb,uBAKNC,EALM,EAKNA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,SAASZ,QAVf,kBAcPM,GAdO,4CAAH,sDCqBEO,EAlBM,SAACf,GAAc,IAAD,EACPd,mBAAS,CACjCqB,KAAM,GACNS,SAAS,IAHsB,mBAC1BC,EAD0B,KACnBC,EADmB,KAejC,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAACb,GACtBW,EAAS,CACPX,OACAS,SAAS,SAGZ,CAAChB,IAEGiB,GCLMI,EAXK,SAAC,GAAoB,IAAlBT,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,0BAASoB,UAAU,wBAAnB,UACE,wBAAQA,UAAU,UAAlB,SACE,qBAAKA,UAAU,cAAcC,IAAKrB,EAAKsB,IAAKZ,MAE9C,mBAAGU,UAAU,SAAb,SAAuBV,QCUda,EAdC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EACNe,EAAaf,GAA/BO,EADwB,EACxBA,KAAMS,EADkB,EAClBA,QAEd,OACE,0BAASM,UAAU,YAAnB,UACE,oBAAIA,UAAU,6BAAd,SAA4CtB,IAC3CgB,GAAW,mBAAGM,UAAU,YAAb,qBACXf,EAAKE,KAAI,SAACiB,GACT,OAAO,cAAC,EAAD,eAA6BA,GAAXA,EAAGf,WCUrBgB,EAlBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,iBADrB,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,qCACE,mCACE,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,0BAGD2C,EAAWnB,KAAI,SAACiB,GAAD,OACd,cAAC,EAAD,CAAkB1B,SAAU0B,GAAdA,UCLPG,EARH,WACV,OACE,+BACE,cAAC,EAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3f0627f7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    inputValue.trim().length > 2 &&\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\nexport default AddCategory;\r\n","const getGifs = async (category) => {\r\n  const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=Tgk3m9g3lF2HZVQztaVvytmkSJiGiTSF`;\r\n  const res = await fetch(url);\r\n  const { data } = await res.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.original.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\nexport default getGifs;\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"./../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((data) => {\r\n      setstate({\r\n        data,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <article className=\"card vov fade-in-down\">\r\n      <figure className=\"figure \">\r\n        <img className=\"figure__img\" src={url} alt={title} />\r\n      </figure>\r\n      <p className=\"card_p\">{title}</p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <section className=\"card-grid\">\r\n      <h3 className=\"card--one vov fade-in-left\">{category}</h3>\r\n      {loading && <p className=\"vov flash\">Loading</p>}\r\n      {data.map((el) => {\r\n        return <GifGridItem key={el.id} {...el} />;\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Black Clover\"]);\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h2>Gif Expert App</h2>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n      </header>\r\n\r\n      {categories.map((el) => (\r\n        <GifGrid key={el} category={el} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport GifExpertApp from \"./components/GifExpertApp\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <main>\r\n      <GifExpertApp />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}